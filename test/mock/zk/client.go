// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nakaji-s/gohbase/zk (interfaces: Client)

package mock

import (
	gomock "github.com/golang/mock/gomock"
	zk "github.com/nakaji-s/gohbase/zk"
)

// Mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *_MockClientRecorder
}

// Recorder for MockClient (not exported)
type _MockClientRecorder struct {
	mock *MockClient
}

func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &_MockClientRecorder{mock}
	return mock
}

func (_m *MockClient) EXPECT() *_MockClientRecorder {
	return _m.recorder
}

func (_m *MockClient) LocateResource(_param0 zk.ResourceName) (string, uint16, error) {
	ret := _m.ctrl.Call(_m, "LocateResource", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(uint16)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockClientRecorder) LocateResource(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LocateResource", arg0)
}

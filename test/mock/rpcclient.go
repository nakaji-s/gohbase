// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nakaji-s/gohbase (interfaces: RPCClient)

package mock

import (
	gomock "github.com/golang/mock/gomock"
	proto "github.com/golang/protobuf/proto"
	hrpc "github.com/nakaji-s/gohbase/hrpc"
)

// Mock of RPCClient interface
type MockRPCClient struct {
	ctrl     *gomock.Controller
	recorder *_MockRPCClientRecorder
}

// Recorder for MockRPCClient (not exported)
type _MockRPCClientRecorder struct {
	mock *MockRPCClient
}

func NewMockRPCClient(ctrl *gomock.Controller) *MockRPCClient {
	mock := &MockRPCClient{ctrl: ctrl}
	mock.recorder = &_MockRPCClientRecorder{mock}
	return mock
}

func (_m *MockRPCClient) EXPECT() *_MockRPCClientRecorder {
	return _m.recorder
}

func (_m *MockRPCClient) SendRPC(_param0 hrpc.Call) (proto.Message, error) {
	ret := _m.ctrl.Call(_m, "SendRPC", _param0)
	ret0, _ := ret[0].(proto.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRPCClientRecorder) SendRPC(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendRPC", arg0)
}

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nakaji-s/gohbase (interfaces: AdminClient)

package mock

import (
	gomock "github.com/golang/mock/gomock"
	hrpc "github.com/nakaji-s/gohbase/hrpc"
)

// Mock of AdminClient interface
type MockAdminClient struct {
	ctrl     *gomock.Controller
	recorder *_MockAdminClientRecorder
}

// Recorder for MockAdminClient (not exported)
type _MockAdminClientRecorder struct {
	mock *MockAdminClient
}

func NewMockAdminClient(ctrl *gomock.Controller) *MockAdminClient {
	mock := &MockAdminClient{ctrl: ctrl}
	mock.recorder = &_MockAdminClientRecorder{mock}
	return mock
}

func (_m *MockAdminClient) EXPECT() *_MockAdminClientRecorder {
	return _m.recorder
}

func (_m *MockAdminClient) CreateTable(_param0 *hrpc.CreateTable) error {
	ret := _m.ctrl.Call(_m, "CreateTable", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAdminClientRecorder) CreateTable(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateTable", arg0)
}

func (_m *MockAdminClient) DeleteTable(_param0 *hrpc.DeleteTable) error {
	ret := _m.ctrl.Call(_m, "DeleteTable", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAdminClientRecorder) DeleteTable(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteTable", arg0)
}

func (_m *MockAdminClient) DisableTable(_param0 *hrpc.DisableTable) error {
	ret := _m.ctrl.Call(_m, "DisableTable", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAdminClientRecorder) DisableTable(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DisableTable", arg0)
}

func (_m *MockAdminClient) EnableTable(_param0 *hrpc.EnableTable) error {
	ret := _m.ctrl.Call(_m, "EnableTable", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAdminClientRecorder) EnableTable(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnableTable", arg0)
}
